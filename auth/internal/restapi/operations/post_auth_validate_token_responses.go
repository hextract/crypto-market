// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/h4x4d/crypto-market/auth/internal/models"
)

// PostAuthValidateTokenOKCode is the HTTP code returned for type PostAuthValidateTokenOK
const PostAuthValidateTokenOKCode int = 200

/*
PostAuthValidateTokenOK Success operation

swagger:response postAuthValidateTokenOK
*/
type PostAuthValidateTokenOK struct {

	/*
	  In: Body
	*/
	Payload *PostAuthValidateTokenOKBody `json:"body,omitempty"`
}

// NewPostAuthValidateTokenOK creates PostAuthValidateTokenOK with default headers values
func NewPostAuthValidateTokenOK() *PostAuthValidateTokenOK {

	return &PostAuthValidateTokenOK{}
}

// WithPayload adds the payload to the post auth validate token o k response
func (o *PostAuthValidateTokenOK) WithPayload(payload *PostAuthValidateTokenOKBody) *PostAuthValidateTokenOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post auth validate token o k response
func (o *PostAuthValidateTokenOK) SetPayload(payload *PostAuthValidateTokenOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAuthValidateTokenOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAuthValidateTokenBadRequestCode is the HTTP code returned for type PostAuthValidateTokenBadRequest
const PostAuthValidateTokenBadRequestCode int = 400

/*
PostAuthValidateTokenBadRequest Incorrect data

swagger:response postAuthValidateTokenBadRequest
*/
type PostAuthValidateTokenBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostAuthValidateTokenBadRequest creates PostAuthValidateTokenBadRequest with default headers values
func NewPostAuthValidateTokenBadRequest() *PostAuthValidateTokenBadRequest {

	return &PostAuthValidateTokenBadRequest{}
}

// WithPayload adds the payload to the post auth validate token bad request response
func (o *PostAuthValidateTokenBadRequest) WithPayload(payload *models.Error) *PostAuthValidateTokenBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post auth validate token bad request response
func (o *PostAuthValidateTokenBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAuthValidateTokenBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

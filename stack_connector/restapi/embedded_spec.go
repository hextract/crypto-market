// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "continuous market | stack connector",
    "title": "market.stack_connector",
    "version": "0.1.0"
  },
  "paths": {
    "/bid": {
      "get": {
        "security": [
          {
            "api_key": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get my bids",
        "operationId": "get_bids",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/bid"
              }
            }
          },
          "403": {
            "description": "No access",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "api_key": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create bid",
        "operationId": "create_bid",
        "parameters": [
          {
            "name": "object",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/bid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "bid_id": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect data",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "No access",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/market/{bid_id}": {
      "get": {
        "security": [
          {
            "api_key": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get bid info by id",
        "operationId": "get_bid_by_id",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of bid to return",
            "name": "bid_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/bid"
            }
          },
          "403": {
            "description": "No access",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Bid not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "api_key": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Cancel bid",
        "operationId": "cancel_bid",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of bid to cancel",
            "name": "bid_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          },
          "400": {
            "description": "Incorrect data",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "No access",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "error_message": {
          "type": "string"
        },
        "error_status_code": {
          "type": "integer"
        }
      }
    },
    "Result": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "bid": {
      "type": "object",
      "properties": {
        "amount_to_buy": {
          "type": "number",
          "format": "float"
        },
        "bid_id": {
          "type": "integer",
          "format": "int64"
        },
        "bought_amount": {
          "type": "number",
          "format": "float"
        },
        "buy_speed": {
          "type": "number",
          "format": "float"
        },
        "max_price": {
          "type": "number",
          "format": "float"
        },
        "min_price": {
          "type": "number",
          "format": "float"
        },
        "user_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "continuous market | stack connector",
    "title": "market.stack_connector",
    "version": "0.1.0"
  },
  "paths": {
    "/bid": {
      "get": {
        "security": [
          {
            "api_key": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get my bids",
        "operationId": "get_bids",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/bid"
              }
            }
          },
          "403": {
            "description": "No access",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "api_key": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create bid",
        "operationId": "create_bid",
        "parameters": [
          {
            "name": "object",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/bid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "bid_id": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect data",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "No access",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/market/{bid_id}": {
      "get": {
        "security": [
          {
            "api_key": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get bid info by id",
        "operationId": "get_bid_by_id",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of bid to return",
            "name": "bid_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/bid"
            }
          },
          "403": {
            "description": "No access",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Bid not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "api_key": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Cancel bid",
        "operationId": "cancel_bid",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of bid to cancel",
            "name": "bid_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          },
          "400": {
            "description": "Incorrect data",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "No access",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "error_message": {
          "type": "string"
        },
        "error_status_code": {
          "type": "integer"
        }
      }
    },
    "Result": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "bid": {
      "type": "object",
      "properties": {
        "amount_to_buy": {
          "type": "number",
          "format": "float"
        },
        "bid_id": {
          "type": "integer",
          "format": "int64"
        },
        "bought_amount": {
          "type": "number",
          "format": "float"
        },
        "buy_speed": {
          "type": "number",
          "format": "float"
        },
        "max_price": {
          "type": "number",
          "format": "float"
        },
        "min_price": {
          "type": "number",
          "format": "float"
        },
        "user_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  }
}`))
}

// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"reporter/internal/infrastructure/dto"
)

// DeliverOrderResultReader is a Reader for the DeliverOrderResult structure.
type DeliverOrderResultReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeliverOrderResultReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeliverOrderResultOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewDeliverOrderResultInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /order_results] deliver_order_result", response, response.Code())
	}
}

// NewDeliverOrderResultOK creates a DeliverOrderResultOK with default headers values
func NewDeliverOrderResultOK() *DeliverOrderResultOK {
	return &DeliverOrderResultOK{}
}

/*
DeliverOrderResultOK describes a response with status code 200, with default header values.

Order result successfully received
*/
type DeliverOrderResultOK struct {
	Payload *dto.Success
}

// IsSuccess returns true when this deliver order result o k response has a 2xx status code
func (o *DeliverOrderResultOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this deliver order result o k response has a 3xx status code
func (o *DeliverOrderResultOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deliver order result o k response has a 4xx status code
func (o *DeliverOrderResultOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this deliver order result o k response has a 5xx status code
func (o *DeliverOrderResultOK) IsServerError() bool {
	return false
}

// IsCode returns true when this deliver order result o k response a status code equal to that given
func (o *DeliverOrderResultOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the deliver order result o k response
func (o *DeliverOrderResultOK) Code() int {
	return 200
}

func (o *DeliverOrderResultOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /order_results][%d] deliverOrderResultOK %s", 200, payload)
}

func (o *DeliverOrderResultOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /order_results][%d] deliverOrderResultOK %s", 200, payload)
}

func (o *DeliverOrderResultOK) GetPayload() *dto.Success {
	return o.Payload
}

func (o *DeliverOrderResultOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dto.Success)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeliverOrderResultInternalServerError creates a DeliverOrderResultInternalServerError with default headers values
func NewDeliverOrderResultInternalServerError() *DeliverOrderResultInternalServerError {
	return &DeliverOrderResultInternalServerError{}
}

/*
DeliverOrderResultInternalServerError describes a response with status code 500, with default header values.

Something went wrong
*/
type DeliverOrderResultInternalServerError struct {
	Payload *dto.Error
}

// IsSuccess returns true when this deliver order result internal server error response has a 2xx status code
func (o *DeliverOrderResultInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deliver order result internal server error response has a 3xx status code
func (o *DeliverOrderResultInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deliver order result internal server error response has a 4xx status code
func (o *DeliverOrderResultInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this deliver order result internal server error response has a 5xx status code
func (o *DeliverOrderResultInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this deliver order result internal server error response a status code equal to that given
func (o *DeliverOrderResultInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the deliver order result internal server error response
func (o *DeliverOrderResultInternalServerError) Code() int {
	return 500
}

func (o *DeliverOrderResultInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /order_results][%d] deliverOrderResultInternalServerError %s", 500, payload)
}

func (o *DeliverOrderResultInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /order_results][%d] deliverOrderResultInternalServerError %s", 500, payload)
}

func (o *DeliverOrderResultInternalServerError) GetPayload() *dto.Error {
	return o.Payload
}

func (o *DeliverOrderResultInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dto.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

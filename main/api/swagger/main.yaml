---
swagger: "2.0"
info:
  description: "continuous market | stack connector"
  version: "0.1.0"
  title: "market.stack_connector"
schemes:
  #  - "https"
  - "http"
paths:
  /market/{bid_id}:
    get:
      summary: "Get bid info by id"
      operationId: "get_bid_by_id"
      produces:
        - "application/json"
      parameters:
        - name: "bid_id"
          in: "path"
          description: "ID of bid to return"
          type: "integer"
          format: "int64"
          required: true
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/bid"
        404:
          description: "Bid not found"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "No access"
          schema:
            $ref: "#/definitions/Error"
      security:
        - api_key: [ ]

    delete:
      summary: "Cancel bid"
      operationId: "cancel_bid"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "bid_id"
          in: "path"
          description: "ID of bid to cancel"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Result"
        403:
          description: "No access"
          schema:
            $ref: "#/definitions/Error"
        400:
          description: "Incorrect data"
          schema:
            $ref: "#/definitions/Error"
      security:
        - api_key: [ ]

  /bid:
    get:
      summary: "Get my bids"
      operationId: "get_bids"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/bid"
        403:
          description: "No access"
          schema:
            $ref: "#/definitions/Error"
      security:
        - api_key: [ ]
    post:
      summary: "Create bid"
      operationId: "create_bid"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "object"
          in: "body"
          schema:
            $ref: "#/definitions/bid"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            properties:
              bid_id:
                type: "integer"
                format: "int64"
        403:
          description: "No access"
          schema:
            $ref: "#/definitions/Error"
        400:
          description: "Incorrect data"
          schema:
            $ref: "#/definitions/Error"
      security:
        - api_key: [ ]
  /account/balance:
    get:
      consumes:
        - "application/json"
      produces:
        - "application/json"
      summary: "Get user's balance"
      description: "Returns balance of all cryptocurrencies"
      security:
        - api_key: [ ]
      responses:
        200:
          description: "Success operation"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                currency:
                  type: "string"
                amount:
                  type: "string"
        401:
          schema:
            $ref: "#/definitions/Error"
          description: "Unauthorized"

  /transactions/purchase:
    get:
      consumes:
        - "application/json"
      produces:
        - "application/json"
      summary: "Get purchase history"
      description: "Returns all user's purchase"
      security:
        - api_key: [ ]
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: "object"
            properties:
              status:
                type: "string"
                enum:
                  - "finished"
                  - "processing"
                  - "cancelled"
              date_from:
                type: "string"
              date_to:
                type: "string"
      responses:
        '200':
          description: "Success operation"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "string"
                currency_from:
                  type: "string"
                currency_to:
                  type: "string"
                amount_from:
                  type: "string"
                amount_to:
                  type: "string"
                status:
                  type: "string"
                  enum:
                    - "finished"
                    - "processing"
                    - "cancelled"
                date:
                  type: "string"
        401:
          schema:
            $ref: "#/definitions/Error"
          description: "Unauthorized"
        409:
          schema:
            $ref: "#/definitions/Error"
          description: "Incorrect data"

  /transactions/transfers:
    get:
      consumes:
        - "application/json"
      produces:
        - "application/json"
      summary: "Get withdrawal and deposits history"
      description: "Returns all user's withdrawal and deposits"
      security:
        - api_key: [ ]
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: "object"
            properties:
              min_amount:
                type: "string"
              max_amount:
                type: "string"
              status:
                type: "string"
                enum:
                  - "finished"
                  - "processing"
                  - "cancelled"
              currency:
                type: "string"
              operation:
                type: "string"
                enum:
                  - "deposit"
                  - "withdrawal"
              date_from:
                type: "string"
              date_to:
                type: "string"
      responses:
        '200':
          description: "Success operation"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "string"
                currency:
                  type: "string"
                amount:
                  type: "string"
                commission:
                  type: "string"
                operation:
                  type: "string"
                  enum:
                    - "deposit"
                    - "withdrawal"
                status:
                  type: "string"
                  enum:
                    - "finished"
                    - "processing"
                    - "cancelled"
                date:
                  type: "string"
        401:
          schema:
            $ref: "#/definitions/Error"
          description: "Unauthorized"
        409:
          schema:
            $ref: "#/definitions/Error"
          description: "Incorrect data"

  /transactions/withdraw:
    post:
      summary: "Withdrawal request"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      description: "Creates a request to withdraw cryptocurrency from the user's account."
      security:
        - api_key: [ ]
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: "object"
            properties:
              currency:
                type: "string"
              amount:
                type: "string"
              address:
                type: "string"
      responses:
        '200':
          description: "Success operation"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
              status:
                type: "string"
                enum:
                  - "finished"
                  - "processing"
                  - "pending"
              txHash:
                type: "string"
        401:
          schema:
            $ref: "#/definitions/Error"
          description: "Unauthorized"
        409:
          schema:
            $ref: "#/definitions/Error"
          description: "Incorrect data"
  /metrics:
    get:
      summary: "Prometheus metrics"
      produces:
        - "application/json"
      responses:
        200:
          description: ok

securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Error:
    type: "object"
    properties:
      error_message:
        type: "string"
      error_status_code:
        type: integer
  Result:
    type: "object"
    properties:
      status:
        type: "string"
      message:
        type: "string"
  bid:
    type: "object"
    properties:
      bid_id:
        type: "integer"
        format: "int64"
      user_id:
        type: "integer"
        format: "int64"
      min_price:
        type: "number"
        multipleOf: 0.0000001
      max_price:
        type: "number"
        multipleOf: 0.0000001
      amount_to_buy:
        type: "number"
        multipleOf: 0.0000001
      bought_amount:
        type: "number"
        multipleOf: 0.0000001
      buy_speed:
        type: "number"
        multipleOf: 0.0000001

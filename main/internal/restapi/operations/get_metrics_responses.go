// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/h4x4d/crypto-market/main/internal/models"
)

// GetMetricsOKCode is the HTTP code returned for type GetMetricsOK
const GetMetricsOKCode int = 200

/*
GetMetricsOK Successful operation

swagger:response getMetricsOK
*/
type GetMetricsOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetMetricsOK creates GetMetricsOK with default headers values
func NewGetMetricsOK() *GetMetricsOK {

	return &GetMetricsOK{}
}

// WithPayload adds the payload to the get metrics o k response
func (o *GetMetricsOK) WithPayload(payload string) *GetMetricsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get metrics o k response
func (o *GetMetricsOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMetricsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetMetricsUnauthorizedCode is the HTTP code returned for type GetMetricsUnauthorized
const GetMetricsUnauthorizedCode int = 401

/*
GetMetricsUnauthorized Unauthorized

swagger:response getMetricsUnauthorized
*/
type GetMetricsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetMetricsUnauthorized creates GetMetricsUnauthorized with default headers values
func NewGetMetricsUnauthorized() *GetMetricsUnauthorized {

	return &GetMetricsUnauthorized{}
}

// WithPayload adds the payload to the get metrics unauthorized response
func (o *GetMetricsUnauthorized) WithPayload(payload *models.Error) *GetMetricsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get metrics unauthorized response
func (o *GetMetricsUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMetricsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

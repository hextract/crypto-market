// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/h4x4d/crypto-market/stack_connector/internal/models"
)

// PostTransactionsDepositOKCode is the HTTP code returned for type PostTransactionsDepositOK
const PostTransactionsDepositOKCode int = 200

/*
PostTransactionsDepositOK Successful operation

swagger:response postTransactionsDepositOK
*/
type PostTransactionsDepositOK struct {

	/*
	  In: Body
	*/
	Payload *PostTransactionsDepositOKBody `json:"body,omitempty"`
}

// NewPostTransactionsDepositOK creates PostTransactionsDepositOK with default headers values
func NewPostTransactionsDepositOK() *PostTransactionsDepositOK {

	return &PostTransactionsDepositOK{}
}

// WithPayload adds the payload to the post transactions deposit o k response
func (o *PostTransactionsDepositOK) WithPayload(payload *PostTransactionsDepositOKBody) *PostTransactionsDepositOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post transactions deposit o k response
func (o *PostTransactionsDepositOK) SetPayload(payload *PostTransactionsDepositOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTransactionsDepositOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostTransactionsDepositBadRequestCode is the HTTP code returned for type PostTransactionsDepositBadRequest
const PostTransactionsDepositBadRequestCode int = 400

/*
PostTransactionsDepositBadRequest Incorrect data

swagger:response postTransactionsDepositBadRequest
*/
type PostTransactionsDepositBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostTransactionsDepositBadRequest creates PostTransactionsDepositBadRequest with default headers values
func NewPostTransactionsDepositBadRequest() *PostTransactionsDepositBadRequest {

	return &PostTransactionsDepositBadRequest{}
}

// WithPayload adds the payload to the post transactions deposit bad request response
func (o *PostTransactionsDepositBadRequest) WithPayload(payload *models.Error) *PostTransactionsDepositBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post transactions deposit bad request response
func (o *PostTransactionsDepositBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTransactionsDepositBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostTransactionsDepositUnauthorizedCode is the HTTP code returned for type PostTransactionsDepositUnauthorized
const PostTransactionsDepositUnauthorizedCode int = 401

/*
PostTransactionsDepositUnauthorized Unauthorized

swagger:response postTransactionsDepositUnauthorized
*/
type PostTransactionsDepositUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostTransactionsDepositUnauthorized creates PostTransactionsDepositUnauthorized with default headers values
func NewPostTransactionsDepositUnauthorized() *PostTransactionsDepositUnauthorized {

	return &PostTransactionsDepositUnauthorized{}
}

// WithPayload adds the payload to the post transactions deposit unauthorized response
func (o *PostTransactionsDepositUnauthorized) WithPayload(payload *models.Error) *PostTransactionsDepositUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post transactions deposit unauthorized response
func (o *PostTransactionsDepositUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTransactionsDepositUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

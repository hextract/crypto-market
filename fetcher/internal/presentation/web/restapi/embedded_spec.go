// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Fetches market data from exchange",
    "title": "connector.fetcher",
    "version": "0.0.0"
  },
  "paths": {
    "/get_balance": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Get account balances for BTC, ETH and USDT",
        "operationId": "get_balance",
        "responses": {
          "200": {
            "description": "Returning balances",
            "schema": {
              "$ref": "#/definitions/MyBalance"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_market_data": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Get last market data",
        "operationId": "get_last_market_data",
        "responses": {
          "200": {
            "description": "Returning market data",
            "schema": {
              "$ref": "#/definitions/OrderBookData"
            }
          },
          "500": {
            "description": "Something went wrong",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/info": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Get info",
        "operationId": "info",
        "responses": {
          "200": {
            "description": "Info got",
            "schema": {
              "properties": {
                "info": {
                  "type": "string",
                  "default": "Connector's market data fetcher service"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "error_status_code"
      ],
      "properties": {
        "error_message": {
          "type": "string"
        },
        "error_status_code": {
          "type": "integer"
        }
      }
    },
    "MyBalance": {
      "type": "object",
      "required": [
        "btc_free",
        "btc_locked",
        "eth_free",
        "eth_locked",
        "usdt_free",
        "usdt_locked"
      ],
      "properties": {
        "btc_free": {
          "type": "number",
          "format": "double"
        },
        "btc_locked": {
          "type": "number",
          "format": "double"
        },
        "eth_free": {
          "type": "number",
          "format": "double"
        },
        "eth_locked": {
          "type": "number",
          "format": "double"
        },
        "usdt_free": {
          "type": "number",
          "format": "double"
        },
        "usdt_locked": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "OrderBookData": {
      "type": "object",
      "required": [
        "snapshots"
      ],
      "properties": {
        "snapshots": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderBookSnapshot"
          }
        }
      }
    },
    "OrderBookSnapshot": {
      "type": "object",
      "required": [
        "mid",
        "spread",
        "ask_volume",
        "bid_volume",
        "depth"
      ],
      "properties": {
        "ask_volume": {
          "type": "number",
          "format": "double"
        },
        "bid_volume": {
          "type": "number",
          "format": "double"
        },
        "depth": {
          "type": "integer",
          "format": "int32"
        },
        "mid": {
          "type": "number",
          "format": "double"
        },
        "spread": {
          "type": "number",
          "format": "double"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Some tag description",
      "name": "some tag"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Fetches market data from exchange",
    "title": "connector.fetcher",
    "version": "0.0.0"
  },
  "paths": {
    "/get_balance": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Get account balances for BTC, ETH and USDT",
        "operationId": "get_balance",
        "responses": {
          "200": {
            "description": "Returning balances",
            "schema": {
              "$ref": "#/definitions/MyBalance"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_market_data": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Get last market data",
        "operationId": "get_last_market_data",
        "responses": {
          "200": {
            "description": "Returning market data",
            "schema": {
              "$ref": "#/definitions/OrderBookData"
            }
          },
          "500": {
            "description": "Something went wrong",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/info": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Get info",
        "operationId": "info",
        "responses": {
          "200": {
            "description": "Info got",
            "schema": {
              "properties": {
                "info": {
                  "type": "string",
                  "default": "Connector's market data fetcher service"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "error_status_code"
      ],
      "properties": {
        "error_message": {
          "type": "string"
        },
        "error_status_code": {
          "type": "integer"
        }
      }
    },
    "MyBalance": {
      "type": "object",
      "required": [
        "btc_free",
        "btc_locked",
        "eth_free",
        "eth_locked",
        "usdt_free",
        "usdt_locked"
      ],
      "properties": {
        "btc_free": {
          "type": "number",
          "format": "double"
        },
        "btc_locked": {
          "type": "number",
          "format": "double"
        },
        "eth_free": {
          "type": "number",
          "format": "double"
        },
        "eth_locked": {
          "type": "number",
          "format": "double"
        },
        "usdt_free": {
          "type": "number",
          "format": "double"
        },
        "usdt_locked": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "OrderBookData": {
      "type": "object",
      "required": [
        "snapshots"
      ],
      "properties": {
        "snapshots": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderBookSnapshot"
          }
        }
      }
    },
    "OrderBookSnapshot": {
      "type": "object",
      "required": [
        "mid",
        "spread",
        "ask_volume",
        "bid_volume",
        "depth"
      ],
      "properties": {
        "ask_volume": {
          "type": "number",
          "format": "double"
        },
        "bid_volume": {
          "type": "number",
          "format": "double"
        },
        "depth": {
          "type": "integer",
          "format": "int32"
        },
        "mid": {
          "type": "number",
          "format": "double"
        },
        "spread": {
          "type": "number",
          "format": "double"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Some tag description",
      "name": "some tag"
    }
  ]
}`))
}

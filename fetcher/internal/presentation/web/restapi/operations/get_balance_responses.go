// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"fetcher/internal/presentation/web/dto"
)

// GetBalanceOKCode is the HTTP code returned for type GetBalanceOK
const GetBalanceOKCode int = 200

/*
GetBalanceOK Returning balances

swagger:response getBalanceOK
*/
type GetBalanceOK struct {

	/*
	  In: Body
	*/
	Payload *dto.MyBalance `json:"body,omitempty"`
}

// NewGetBalanceOK creates GetBalanceOK with default headers values
func NewGetBalanceOK() *GetBalanceOK {

	return &GetBalanceOK{}
}

// WithPayload adds the payload to the get balance o k response
func (o *GetBalanceOK) WithPayload(payload *dto.MyBalance) *GetBalanceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get balance o k response
func (o *GetBalanceOK) SetPayload(payload *dto.MyBalance) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBalanceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetBalanceInternalServerErrorCode is the HTTP code returned for type GetBalanceInternalServerError
const GetBalanceInternalServerErrorCode int = 500

/*
GetBalanceInternalServerError Server error

swagger:response getBalanceInternalServerError
*/
type GetBalanceInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *dto.Error `json:"body,omitempty"`
}

// NewGetBalanceInternalServerError creates GetBalanceInternalServerError with default headers values
func NewGetBalanceInternalServerError() *GetBalanceInternalServerError {

	return &GetBalanceInternalServerError{}
}

// WithPayload adds the payload to the get balance internal server error response
func (o *GetBalanceInternalServerError) WithPayload(payload *dto.Error) *GetBalanceInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get balance internal server error response
func (o *GetBalanceInternalServerError) SetPayload(payload *dto.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBalanceInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

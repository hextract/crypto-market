// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"fetcher/internal/presentation/web/dto"
)

// GetLastMarketDataOKCode is the HTTP code returned for type GetLastMarketDataOK
const GetLastMarketDataOKCode int = 200

/*
GetLastMarketDataOK Returning market data

swagger:response getLastMarketDataOK
*/
type GetLastMarketDataOK struct {

	/*
	  In: Body
	*/
	Payload *dto.OrderBookData `json:"body,omitempty"`
}

// NewGetLastMarketDataOK creates GetLastMarketDataOK with default headers values
func NewGetLastMarketDataOK() *GetLastMarketDataOK {

	return &GetLastMarketDataOK{}
}

// WithPayload adds the payload to the get last market data o k response
func (o *GetLastMarketDataOK) WithPayload(payload *dto.OrderBookData) *GetLastMarketDataOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get last market data o k response
func (o *GetLastMarketDataOK) SetPayload(payload *dto.OrderBookData) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLastMarketDataOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetLastMarketDataInternalServerErrorCode is the HTTP code returned for type GetLastMarketDataInternalServerError
const GetLastMarketDataInternalServerErrorCode int = 500

/*
GetLastMarketDataInternalServerError Something went wrong

swagger:response getLastMarketDataInternalServerError
*/
type GetLastMarketDataInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *dto.Error `json:"body,omitempty"`
}

// NewGetLastMarketDataInternalServerError creates GetLastMarketDataInternalServerError with default headers values
func NewGetLastMarketDataInternalServerError() *GetLastMarketDataInternalServerError {

	return &GetLastMarketDataInternalServerError{}
}

// WithPayload adds the payload to the get last market data internal server error response
func (o *GetLastMarketDataInternalServerError) WithPayload(payload *dto.Error) *GetLastMarketDataInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get last market data internal server error response
func (o *GetLastMarketDataInternalServerError) SetPayload(payload *dto.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLastMarketDataInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
